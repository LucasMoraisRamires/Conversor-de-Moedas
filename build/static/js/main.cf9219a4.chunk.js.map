{"version":3,"sources":["logo.svg","components/Conversor.jsx","App.js","reportWebVitals.js","index.js"],"names":["Conversor","props","state","moedaA_valor","moedaB_valor","converter","bind","de_para","this","moedaA","moedaB","url","fetch","then","res","json","cotacao","parseFloat","toFixed","setState","className","type","onChange","event","target","value","onClick","PureComponent","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAAe,I,wCCsDAA,E,kDAlDX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAIDC,MAAQ,CACTC,aAAa,GACbC,aAAa,GAIjB,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBAXF,E,wDAcP,IAAD,OAEPC,EAAO,UAAMC,KAAKP,MAAMQ,OAAjB,YAA2BD,KAAKP,MAAMS,QAC7CC,EAAG,qDAAiDJ,EAAjD,8CAEPK,MAAMD,GACLE,MAAK,SAAAC,GAEE,OAAOA,EAAIC,UAGdF,MAAK,SAAAE,GAEF,IAAIC,EAAUD,EAAKR,GACfH,GAAgBa,WAAW,EAAKf,MAAMC,cAAgBa,GAASE,QAAQ,GAC3E,EAAKC,SAAS,CAACf,sB,+BAQb,IAAD,OACL,OACI,sBAAKgB,UAAU,YAAf,UACI,+BAAKZ,KAAKP,MAAMQ,OAAhB,SAA8BD,KAAKP,MAAMS,OAAzC,OACA,uBAAOW,KAAK,OAAOD,UAAU,cAAcE,SAAU,SAACC,GAAS,EAAKJ,SAAS,CAAChB,aAAaoB,EAAMC,OAAOC,WACxG,uBAAOJ,KAAK,SAASK,QAASlB,KAAKH,UAAYoB,MAAM,cACnD,6BAAKjB,KAAKN,MAAME,sB,GA5CVuB,iB,MC6BTC,MA1Bf,WACE,OACE,sBAAKR,UAAU,MAAf,UACE,wDACA,sBAAKA,UAAU,QAAf,UAEE,cAAC,EAAD,CAAWX,OAAO,MAAMC,OAAO,QAC/B,cAAC,EAAD,CAAWD,OAAO,MAAMC,OAAO,WAEjC,sBAAKU,UAAU,QAAf,UACE,cAAC,EAAD,CAAWX,OAAO,MAAMC,OAAO,QAC/B,cAAC,EAAD,CAAWD,OAAO,MAAMC,OAAO,WAEjC,sBAAKU,UAAU,QAAf,UACE,cAAC,EAAD,CAAWX,OAAO,MAAMC,OAAO,QAC/B,cAAC,EAAD,CAAWD,OAAO,MAAMC,OAAO,WAEjC,sBAAKU,UAAU,QAAf,UACE,cAAC,EAAD,CAAWX,OAAO,MAAMC,OAAO,QAC/B,cAAC,EAAD,CAAWD,OAAO,MAAMC,OAAO,eCbxBmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.cf9219a4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { PureComponent } from 'react'\r\n\r\n\r\nclass Conversor extends PureComponent {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n\r\n\r\n        this.state = {\r\n            moedaA_valor:'',\r\n            moedaB_valor:0,\r\n            \r\n        }\r\n\r\n        this.converter = this.converter.bind(this);\r\n    }\r\n\r\n    converter(){\r\n        \r\n    let de_para = `${this.props.moedaA}_${this.props.moedaB}`\r\n    let url = `https://free.currconv.com/api/v7/convert?q=${de_para}&compact=ultra&apiKey=db3d2842dfd5bc4b881c`\r\n\r\n    fetch(url)\r\n    .then(res=>{\r\n\r\n            return res.json()\r\n\r\n        })\r\n        .then(json=>{\r\n\r\n            let cotacao = json[de_para];\r\n            let moedaB_valor = (parseFloat(this.state.moedaA_valor) * cotacao).toFixed(2)\r\n            this.setState({moedaB_valor})\r\n\r\n        })\r\n            \r\n    \r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"conversor\">\r\n                <h2>{this.props.moedaA} para {this.props.moedaB} </h2> \r\n                <input type=\"text\" className='input-moeda' onChange={(event)=>{this.setState({moedaA_valor:event.target.value})}}/>\r\n                <input type=\"button\" onClick={this.converter}  value=\"Converter\"/>\r\n                  <h2>{this.state.moedaB_valor}</h2>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Conversor\r\n\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Conversor from'./components/Conversor.jsx';\nimport './components/Conversor.css';\nimport React from  'react';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h2> Conversor de Moedas: </h2>\n      <div className=\"linha\">\n        \n        <Conversor moedaA=\"USD\" moedaB=\"BRL\"></Conversor>\n        <Conversor moedaA=\"BRL\" moedaB=\"USD\"></Conversor>\n      </div>\n      <div className=\"linha\">\n        <Conversor moedaA=\"EUR\" moedaB=\"BRL\"></Conversor>\n        <Conversor moedaA=\"BRL\" moedaB=\"EUR\"></Conversor>\n      </div>\n      <div className=\"linha\">\n        <Conversor moedaA=\"CAD\" moedaB=\"BRL\"></Conversor>\n        <Conversor moedaA=\"BRL\" moedaB=\"CAD\"></Conversor>\n      </div>\n      <div className=\"linha\">\n        <Conversor moedaA=\"ARS\" moedaB=\"BRL\"></Conversor>\n        <Conversor moedaA=\"BRL\" moedaB=\"ARS\"></Conversor>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}